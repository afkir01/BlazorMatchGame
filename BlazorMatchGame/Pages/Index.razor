@page "/"

<PageTitle>Index</PageTitle>
<style>
    .container  {
        width: 400px;
    }
    button {
        width: 100px;
        height: 100px;
        font-size: 50px;
    }
</style>

<div class="container">
    <div class="row">
        @for (var animalNumber = 0; animalNumber < shuffeldAnimals.Count; animalNumber++)
            {
                var animal = shuffeldAnimals[animalNumber];
                var uniqueDescription = $"Button #{animalNumber}";
                <div class="col-3">
                   <button @onclick="@(() => ButtonClick(animal, uniqueDescription))"
                            type="button" class="btn btn-outline-dark">
                        <h1>@animal</h1>
                    </button>
            </div>
        }
    </div>
    <div class="row">
        <h2>Matches found: @matchesFound</h2>
    </div>
</div>

@code{
    List<string> animalEmoji = new List<string>()
    {
        "🐶", "🐶",
        "🐺", "🐺",
        "🐮", "🐮",
        "🦊", "🦊",
        "🐱", "🐱",
        "🦁", "🦁",
        "🐯", "🐯",
        "🐹", "🐹"
    };

    List<string> shuffeldAnimals = new List<string>();
    int matchesFound = 0;

    protected override void OnInitialized()
    {
        SetupGame();
    }

    private void SetupGame()
    {
        Random random = new Random();

        shuffeldAnimals = animalEmoji
            .OrderBy(item => random.Next())
            .ToList();
        matchesFound = 0;
    }

    string lastAnimalFound = string.Empty;
    string lastDescription = string.Empty;

    private void ButtonClick(string animal, string animalDescription)
    {
        if (lastAnimalFound == string.Empty)
        {
            // First selection of the pair. Remeber it.
            lastAnimalFound = animal;
            lastDescription = animalDescription;
        }
        else if((lastAnimalFound == animal) && (animalDescription != lastDescription))
        {
            // Match found! Reset for next pair.
            lastAnimalFound = string.Empty;

            // Replace found animals with empty string to hide them.
            shuffeldAnimals = shuffeldAnimals
                .Select(a => a.Replace(animal, string.Empty))
                .ToList();
            matchesFound++;
            if(matchesFound == 8)
            {
                    SetupGame();
            }
        }
        else
        {
            // User selected a pair that don't match.
            // Reset selection.
            lastAnimalFound = string.Empty;
        }
    }
}
